module d_latch_using_mux_tb;

    reg D;
    reg enable;
    reg clk;
    wire Q;
    
    // Clock generation
    always begin
        #5 clk = ~clk;
    end
    
    initial begin
        D = 0;
        enable = 0;
        clk = 0;
        #10 D = 1;
        #10 enable = 0;
        
        // Test 4: D = 0, enable = 0
        #10 D = 0;
        #10 enable = 0;
        // Test 1: D = 1, enable = 1
        #10 D = 1;
        #10 enable = 1;
        
        // Test 2: D = 0, enable = 1
        #10 D = 0;
        #10 enable = 1;
        
        // Test 3: D = 1, enable = 0
        
        
        $finish; // Simülasyonu sonlandır
    end
    
    // Instantiate the d_latch_using_mux module
    d_latch_using_mux latch_inst (
        .D(D),
        .enable(enable),
        .clk(clk),
        .Q(Q)
    );
    
endmodule

