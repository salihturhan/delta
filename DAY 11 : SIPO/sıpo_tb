module SIPO_Shift_Register_TB;
    reg clk;
    reg reset;
    reg serial_in;
    wire [7:0] parallel_out;

    // Instantiate the SIPO shift register module
    SIPO_Shift_Register dut (
        .clk(clk),
        .reset(reset),
        .serial_in(serial_in),
        .parallel_out(parallel_out)
    );

    // Clock generation
    always begin
        #5 clk = ~clk;
    end

    initial begin
        clk = 0;
        reset = 1;
        serial_in = 0;

        // Reset the shift register
        #10 reset = 0;

        // Shift in data and observe parallel output
        #10 serial_in = 1;
        #10 serial_in = 0;
        #10 serial_in = 1;

        // Wait for a few more clock cycles to observe output
        #20;

        // End simulation
        $finish;
    end

endmodule

