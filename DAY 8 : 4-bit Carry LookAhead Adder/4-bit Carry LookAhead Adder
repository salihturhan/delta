`timescale 1ns / 1ps

module CLA_4Bit (
    input [3:0] A,
    input [3:0] B,
    input Cin,
    output [3:0] Sum,
    output Cout
);

wire [3:0] P, G;
wire [3:0] C;

assign P = A ^ B;// toplam 1 olduğunda çıkış 1 verir
assign G = A & B;//yalnızca elde var ise çıktı 1 verir

assign C[0] = Cin;//elde girişi var ise kaydedilir
assign C[1] = G[0] | (P[0] & Cin);//çıkışın 1. biti için cout ve sum bulunur.her bit için işlem devam eder ve çıktının eldesi var ise ona ulaşılır.
assign C[2] = G[1] | (P[1] & G[0]) | (P[1] & P[0] & Cin);
assign C[3] = G[2] | (P[2] & G[1]) | (P[2] & P[1] & G[0]) | (P[2] & P[1] & P[0] & Cin);

assign Sum = A + B + Cin;//toplam verilir
assign Cout = C[3];//elde verilir

endmodule

